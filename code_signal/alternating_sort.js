/* 

You are given an array of integers a.A new array b is generated by rearranging the elements of a in the following way:

b[0] is equal to a[0];
b[1] is equal to the last element of a;
b[2] is equal to a[1];
b[3] is equal to the second - last element of a;
and so on.
Your task is to determine whether the new array b is sorted in strictly ascending order or not.

For a = [1, 3, 5, 6, 4, 2], the output should be alternatingSort(a) = true.

The new array b will look like[1, 2, 3, 4, 5, 6], which is in strictly ascending order, so the answer is true.

For a = [1, 4, 5, 6, 3], the output should be alternatingSort(a) = false.

The new array b will look like[1, 3, 4, 6, 5], which is not in strictly ascending order, so the answer is false.

*/

// use a single for loop and go from start and end at same iteration
// also keep max and see if we can exit loop early
// for odd numbered arrays, how to leave the middle for last?
// 

function alternatingSort(a) {
  if(a.length === 1) return true;
  let max = -Infinity;
  let len = a.length;
  let n = Math.floor(len/2);
  let i = 0;
  for (i; i < n; i++){
    if(a[i] <= max ) return false;
    max = a[i];
    if(a[len-i-1] <= max) return false;
    max = a[len-i-1];
  };
  if (i !== len/2){
    if (a[i] <= max) return false;
  }
  return true;
};

console.log(alternatingSort([1, 3, 5, 7, 6, 4, 2]));
// [-92, -48, -23, -17, 0, 41, 45, 89, 89, 95, 96, 99]